const axios = require('axios');
const reviews = require("../models/reviewModel");
const Article = require("../models/articleModel");
const { StatusCodes } = require("http-status-codes");
const { BadRequest, NotFoundError } = require("../errors");

const getAllReviews = async (req, res, next) => {
  const reviews = await reviews.find({ createdBy: req.user.user.id });
  res.status(StatusCodes.OK).json({ reviews });
};

const getReview = async (req, res) => {
  try {
    const {
      user: { userId },
      params: { id: reviewId },
    } = req.params;
    const review = await reviews.findOne({ id: reviewId, createdBy: userId });
    if (!review) {
      throw new NotFoundError(`No article with id ${reviewId}`);
    }
    res.status(StatusCodes.OK).json({ review });
  } catch (err) {
    res.status(StatusCodes);
  }
};

const getPendingReviews = async (req, res) => {
  try {
    const articles = await Article.find({ review: null }).exec();
    res.status(StatusCodes.OK).json(articles);
  } catch (error) {
    res
      .status(StatusCodes.INTERNAL_SERVER_ERROR)
      .json({ error: "Failed to fetch articles with " });
  }
};

const getReviewedArticles = async (req, res) => {
  try {
    const articles = await Article.find({ review: { $ne: null } }).exec();
    res.status(StatusCodes.OK).json(articles);
  } catch (error) {
    res
      .status(StatusCodes.INTERNAL_SERVER_ERROR)
      .json({ error: "Failed to fetch reviewd articles" });
  }
};

const submitReviews = async (req, res) => {
  try {
    const reviewerResponses = req.body;
    const review = new reviews(reviewerResponses);
    await review.save();

    res.status(201).json({ message: "Review saved successfully." });
  } catch (err) {
    res.status(500).json({ error: "Error saving the review." });
  }
};
